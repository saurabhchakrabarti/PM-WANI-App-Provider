
interface WaniAppToken {
  "ver": string, // version of the token structure
  "timestamp": string,
  "username": string, // username of user (mandatory)
  "password": string, // password created by the user (mandatory)
  "apMacId": string,//MAC ID of the WiFi radio of  Access point which SSID is selected (mandatory)
  "deviceMacId"?: string,//MAC ID of the User device after selecting SSID (optional)
  "appId": string, // App id to handle multiple apps from same provider
  "appVer": string, // version of app to handle multiple app versions
  "totp": string, // TOTP generated by the app. This is essential to ensure App provider server can trust origin of this token
  "custData": object // any custom JSON data structure needed by the app}
}

function isWaniAppToken(object: any): boolean {

  if ('object' !== typeof object) return false;

  const { ver, timestamp, username,
    password, apMacId, deviceMacId,
    appId, appVer, totp, custData } = object;

  return typeof ver === 'string'
    && typeof timestamp === 'string'
    && typeof username === 'string'
    && typeof password === 'string'
    && typeof apMacId === 'string'
    && (typeof deviceMacId === 'string' || typeof deviceMacId === 'undefined')
    && typeof appId === 'string'
    && typeof appVer === 'string'
    && typeof totp === 'string'
    && (typeof custData === 'object' || typeof custData === 'undefined')

}

export {
  WaniAppToken,
  isWaniAppToken
};

